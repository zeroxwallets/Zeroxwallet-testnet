# ZeroxWallet ‚Äì Milestone 1 Submission

Our project, ZeroxWallet, is a lightweight non-custodial wallet built on the Hedera TestNet. The wallet allows users to:


Check HBAR balance in real-time by integrating with Hedera Mirror Node APIs.

Send and receive HBAR securely using Hedera account IDs.

View transaction history directly inside the wallet interface.

Integrate Firebase for account management and authentication during testing.


Additionally, we have successfully deployed and tested a sample smart contract on Hedera EVM using Remix, proving end-to-end Hedera integration. This validates that our wallet can support not only native HBAR transactions but also future smart contract interactions.

The frontend has been deployed with a working TestNet UI (balance check, send/receive forms, QR code for receiving, and transaction history). Backend APIs are built with Next.js and integrated with Firebase Admin SDK.

With this milestone, we demonstrate a fully functional TestNet wallet, a deployed smart contract, and a public GitHub repo showcasing all implementation details.


## ‚úÖ Deliverables Completed (Milestone 1)


### 1. Wallet DApp (Frontend)
- Implemented using Next.js + Vercel (Testnet).
- Core features:
  - View wallet balance (HBAR).
  - Send HBAR to another account ID.
  - Receive HBAR (QR code + Account ID).
  - View transaction history.


### 2. Backend & APIs
- Integrated with Firebase Firestore for account management.
- APIs implemented:
  - **/api/balance** ‚Üí Fetch user balance using Hedera SDK + Mirror Node.
  - **/api/send** ‚Üí Send HBAR transaction (with private key signing).
  - **/api/history** ‚Üí Load recent transactions from Mirror Node.


### 3. Smart Contract DeliverablHelloHederaelloHedera** Solidity contract deployed on Hedera JSON-RPC relay.
- Contract functionality:
  - Stores a message ("Hello, Hedera!" by default).
  - Supports updating the message via setMessage().
- Verified inteRemix IDE + MetaMask+ MetaMask**:
  - Deployed successfully on Hedera Testnet.
  - Updated contract state (message = "zeroxwallet test").
  - Transaction proof attached in screenshots.

### 4. EvidencWallet UI screenshotscreenshots** showing balance, send/receive, andAPI curl test logs test logs** verifying balance fetch and HBAR tSmart contract deployment screenshotscreenshots** vFirestore DB screenshotscreenshot** showing accountId + privateKey storage.


## üõ†Ô∏è TFrontend:*Frontend:** Next.js, TailBackend:**Backend:** Firebase Admin SDK, Firestore, Next.js APIBlockchain:lockchain:** Hedera Hashgraph (Testnet), Mirror Node, HedSmart Contract: Contract:** Solidity ^0.8.x, Remix IDE, MetaMask (Hedera JSON-RPC relay)


## üöÄ How to Test Locally
1. Clone the repository:
   `bash
   git clone <repo-url>
   cd zeroxwallet-testnet
